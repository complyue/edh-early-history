
// Some fancy chars can be used in operators
//
// ⁉️❇️‼️♾️☢️☣️™️©️®️⚡▢◆◇◈◉◎☆★☼♻⎔⌬⏣♠️♥️♦️♣️▲▶▼◀
// 🔀🔁🔂⏩⏪🔼⏫🔽⏬⏹️
// 🌀📢📣🔔🔕🎵⭕
// 🆔🆘🆚


{
  operator != (lhv, rhv) not (lhv == rhv)

  operator &> (scope, lhe, rhe) {
    lhv = scope.eval(lhe)
    if lhv != false && lhv != nil && lhv != ''
      then scope.eval(rhe)
      else nil
  }

  operator |> (scope, lhe, rhe) {
    lhv = scope.eval(lhe)
    if lhv == false || lhv == nil || lhv == ''
      then scope.eval(rhe)
      else lhv
  }
}
method f (n) { r = n>5 &> n*7 |> n*3; r/11 }
( f(2), f(8) )


{
  operator += (scope, lhe, rhe) {
    scope.eval(makeOp(
      lhe, "=", makeOp(lhe, "+", rhe)
    ))
  }

  operator -= (scope, lhe, rhe) {
    scope.eval(makeOp(
      lhe, "=", makeOp(lhe, "-", rhe)
    ))
  }

  operator *= (scope, lhe, rhe) {
    scope.eval(makeOp(
      lhe, "=", makeOp(lhe, "*", rhe)
    ))
  }

  operator /= (scope, lhe, rhe) {
    scope.eval(makeOp(
      lhe, "=", makeOp(lhe, "/", rhe)
    ))
  }
}
(a = 3, a += 5, a -= 7, a *= 11, a /= 17)

