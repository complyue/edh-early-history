
{
  class Data () {

    data = {}

    # magic method responding to read with an index
    method ([]) (ix) {

      # runtime.info <| 'Indexing with ' ++ type(ix) ++ ': ' ++ ix

      case ix of {

        {(start:stop:step)} -> {
          runtime.info <| 'Indexing interleaved 1d range: ' ++ ix
          break # no way to be success on a dict
        }

        {(start:stop)} -> {
          runtime.info <| 'Indexing contiguous 1d range: ' ++ ix
          break # no way to be success on a dict
        }

        {(dim'1, dim'2)} -> {

          runtime.info <| 'Indexing 2d space with: ' ++ ix

          case dim'1 of {
            {(start:stop:step)} -> {
              runtime.info <| 'Indexing interleaved 1st dimension range: ' ++ dim'1
              break # no way to be success on a dict
            }

            {(start:stop)} -> {
              runtime.info <| 'Indexing contiguous 1st dimension range: ' ++ dim'1
              break # no way to be success on a dict
            }
          }

          # similar can be done for 2nd dimension - dim'2

          break # no way to be success on a dict
        }

      }

      case type(ix) of {
        DecimalType -> {
          runtime.info <| 'Indexing 1d element: ' ++ ix
        }
        StringType -> {
          runtime.info <| 'Indexing column by name: ' ++ ix
        }
        _ -> {
          runtime.info <| 'Suspicious index ' ++ type(ix) ++ ': ' ++ ix
          break # avoid actually doing indexing with this ix
        }
      }

      this.data[ix]
    }

    # magic method responding to write with an index
    method ([=]) (ix, val) this.data[ix] = val

  }
}

d = Data()

d[3] = 5
d[3]

d['price'] = [1.2,1.3,1.1]
d['price']

d[3:5] = 7
d[3:5]

d[3:5:2, 0:7:3]

d[3, 5, 7]
